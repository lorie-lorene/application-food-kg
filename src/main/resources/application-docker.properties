# Configuration Docker - Profil spécifique pour conteneurisation
# Ce fichier surcharge application.properties quand SPRING_PROFILES_ACTIVE=docker

# ===== CONFIGURATION SERVEUR =====
# CRITIQUE : Écouter sur toutes les interfaces dans Docker
server.address=0.0.0.0
server.port=8080

# ===== CONFIGURATION LOGGING =====
# Logs moins verbeux en production Docker
logging.level.root=INFO
logging.level.com.foodkg=INFO
logging.level.org.springframework.boot=INFO
logging.level.org.springframework.web=WARN
logging.level.org.apache.jena=WARN
logging.level.org.apache.lucene=WARN
logging.pattern.console=%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n

# ===== CONFIGURATION FOOD KG =====
# URLs et chemins adaptés pour Docker
food.kg.fuseki-url=${FOOD_KG_FUSEKI_URL:http://fuseki:3030}
food.kg.dataset-name=${FOOD_KG_DATASET_NAME:food-kg-v2}
food.kg.lucene-index-path=${FOOD_KG_LUCENE_INDEX_PATH:/app/lucene-index}
food.kg.images-base-path=${FOOD_KG_IMAGES_BASE_PATH:/app/data/images}

# ===== DÉSACTIVATION FONCTIONNALITÉS PROBLÉMATIQUES =====
# Éviter les blocages au démarrage
spring.cloud.config.enabled=false
spring.cloud.bootstrap.enabled=false
spring.jmx.enabled=false

# ===== CONFIGURATION THYMELEAF =====
spring.thymeleaf.cache=false
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

# ===== CONFIGURATION RESSOURCES STATIQUES =====
spring.web.resources.static-locations=classpath:/static/,file:${food.kg.images-base-path}/
spring.web.resources.cache.period=3600

# ===== CONFIGURATION MULTIPART =====
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# ===== CONFIGURATION CORS =====
# Permissif pour les tests Docker
spring.web.cors.allowed-origins=*
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*

# ===== ACTUATORS POUR MONITORING =====
# Health checks et monitoring
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always
management.endpoint.health.show-components=always
management.endpoint.health.probes.enabled=true

# ===== CONFIGURATION TIMEOUTS =====
# Éviter les timeouts dans l'environnement Docker
spring.mvc.async.request-timeout=60000
server.servlet.session.timeout=30m

# ===== OPTIMISATIONS DÉMARRAGE =====
# Performance et stabilité
spring.main.lazy-initialization=false
spring.jpa.open-in-view=false

# ===== CONFIGURATION SPÉCIFIQUE DOCKER =====
# Variables pour debugging si nécessaire
management.info.env.enabled=true
management.info.java.enabled=true
management.info.os.enabled=true

# Configuration pour éviter les problèmes de réseau Docker
server.tomcat.connection-timeout=20000
server.tomcat.keep-alive-timeout=15000

logging.level.org.apache.catalina=DEBUG
logging.level.org.springframework.boot.web.embedded.tomcat=DEBUG